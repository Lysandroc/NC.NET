@model negocio.UI.Web.Areas.Admin.Models.ProdutoViewModel

@{
    ViewBag.Title = "Criar Produto";
}

<h3>Cadastro de produto</h3>
@Mensagem.Erro(ViewBag.status)


@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/Outros/AutoComplete.js")

}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Descricao, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Categoria", new {@class = "control-label col-md-2"})
            <div>
                <div class="col-md-4">
                    @Html.HiddenFor(Model => Model.idProdutoCategoria)
                    @Html.EditorFor(model => model.DescricaoCategoria, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.idProdutoCategoria, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Marca, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Marca, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Marca, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Modelo, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Modelo, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Modelo, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Tamanho, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tamanho, new {htmlAttributes = new {@class = "form-control", type = "text"}})
                @Html.ValidationMessageFor(model => model.Tamanho, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Referencia, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Referencia, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Referencia, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Voltar", "Index", null, new {@class = "btn btn-primary"})
                <input type="submit" value="Criar" class="btn btn-default" />
            </div>
        </div>
    </div>
}



<script type="text/javascript">
    $(document).ready(function() {
        $("#DescricaoCategoria").autocomplete({
            source: function(request, response) {
                var customer = new Array();
                $.ajax({
                    url: "@(Url.Action("ConsultaProdutoCategoria", "Global"))",
                    type: "POST",
                    minLength: 3,
                    async: false,
                    cache: false,
                    dataType: "json",
                    data: { term: request.term },
                    success: function(data) {
                        for (var i = 0; i < data.length; i++) {
                            customer[i] = { label: data[i].Value, Key: data[i].Key };
                        }
                    }
                });
                response(customer);
            },
            messages: {
                noResults: "",
                results: ""
            },
            select: function(event, ui) {
                $("#idProdutoCategoria").val(ui.item.Key);
            }

        });
    });
</script>